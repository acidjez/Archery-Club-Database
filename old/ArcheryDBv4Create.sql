DROP TABLE IF EXISTS END;
DROP TABLE IF EXISTS SCORE;
DROP TABLE IF EXISTS RANGEE;
DROP TABLE IF EXISTS EQUIPMENTROUND;
DROP TABLE IF EXISTS EQUIPMENT;
DROP TABLE IF EXISTS DIVISIONROUND;
DROP TABLE IF EXISTS DIVISION;
DROP TABLE IF EXISTS ARCHERPRACTICEROUND;
DROP TABLE IF EXISTS ARCHERCOMPETITION;
DROP TABLE IF EXISTS COMPETITION;
DROP TABLE IF EXISTS ROUND;
DROP TABLE IF EXISTS ARCHER;

CREATE TABLE ARCHER (
    ArcherID INT AUTO_INCREMENT,
    FirstName VARCHAR(20) NOT NULL,
    LastName VARCHAR(30) NOT NULL,
    DOB DATE NOT NULL,
    Gender ENUM('M','F') NOT NULL,
    PhoneNo INT (10),
    PRIMARY KEY (ArcherID)
);

CREATE TABLE ROUND (
    RoundID VARCHAR(20) NOT NULL,
	LongName VARCHAR(255) NOT NULL,
    PRIMARY KEY (RoundID)
);

CREATE TABLE COMPETITION (
    CompetitionID INT AUTO_INCREMENT,
    RoundID VARCHAR(10) NOT NULL,
    ISChampionchip ENUM ('Y', 'N') NOT NULL DEFAULT 'N',
    CompName VARCHAR (20) NOT NULL,
    CompDate DATE NOT NULL,
    PRIMARY KEY (CompetitionID),
    FOREIGN KEY (RoundID) REFERENCES ROUND (RoundID)
);

CREATE TABLE ARCHERCOMPETITION (
    CompetitionID INT NOT NULL,
    ArcherID INT NOT NULL,
    PRIMARY KEY (CompetitionID, ArcherID),
    FOREIGN KEY (CompetitionID) REFERENCES COMPETITION(CompetitionID),
    FOREIGN KEY (ArcherID) REFERENCES ARCHER(ArcherID)
);

CREATE TABLE ARCHERPRACTICEROUND (
    RoundID VARCHAR(10) NOT NULL,
    ArcherID INT NOT NULL,
    PRIMARY KEY (RoundID, ArcherID),
    FOREIGN KEY (RoundID) REFERENCES ROUND (RoundID),
    FOREIGN KEY (ArcherID) REFERENCES ARCHER (ArcherID)
);

CREATE TABLE DIVISION (
    DivisionName VARCHAR(20) NOT NULL,
    Gender ENUM('M','F') NOT NULL,
    PRIMARY KEY (DivisionName)
);

CREATE TABLE DIVISIONROUND (
    DivisionName VARCHAR(20) NOT NULL,
    RoundID VARCHAR(10) NOT NULL,
    EquivelantRound VARCHAR(10),
    EffectiveDate DATE,
    PRIMARY KEY (DivisionName, RoundID),
    FOREIGN KEY (DivisionName) REFERENCES DIVISION (DivisionName),
    FOREIGN KEY (RoundID) REFERENCES ROUND (RoundID),
    FOREIGN KEY (EquivelantRound) REFERENCES ROUND (RoundID)
);

CREATE TABLE EQUIPMENT (
    BowType VARCHAR(20) NOT NULL,
    PRIMARY KEY (BowType)
);

CREATE TABLE EQUIPMENTROUND (
    BowType VARCHAR(20) NOT NULL,
    RoundID VARCHAR(10) NOT NULL,
    PRIMARY KEY(BowType, RoundID),
    FOREIGN KEY (BowType) REFERENCES EQUIPMENT (BowType),
    FOREIGN KEY (RoundID) REFERENCES ROUND (RoundID)
);

CREATE TABLE RANGEE (
    Distance INT NOT NULL,
    RangeNo INT NOT NULL,
    RoundID VARCHAR(10) NOT NULL,
    NoOfEnds INT NOT NULL,
    PRIMARY KEY(Distance, RangeNo, RoundID),
    FOREIGN KEY (RoundID) REFERENCES ROUND (RoundID)
);

CREATE TABLE END (
    EndNumber INT NOT NULL,
    Distance INT NOT NULL,
    RangeNo INT NOT NULL,
    RoundID VARCHAR(10) NOT NULL,
    ArcherID INT NOT NULL,
    CompetitionID INT,
    FaceSize ENUM ('80', '120') NOT NULL,
    ArrowScore1 INT NOT NULL,
    ArrowScore2 INT NOT NULL,
    ArrowScore3 INT NOT NULL,
    ArrowScore4 INT NOT NULL,
    ArrowScore5 INT NOT NULL,
    ArrowScore6 INT NOT NULL,
    PRIMARY KEY (EndNumber, Distance, RangeNo, RoundID, ArcherID),
    FOREIGN KEY (Distance, RangeNo, RoundID) REFERENCES RANGEE (Distance, RangeNo, RoundID),
    FOREIGN KEY (ArcherID) REFERENCES ARCHERCOMPETITION(ArcherID),
    FOREIGN KEY (CompetitionID) REFERENCES ARCHERCOMPETITION(CompetitionID)
);